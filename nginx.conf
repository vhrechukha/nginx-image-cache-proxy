worker_processes 1;

events {
    worker_connections 1024;
}

http {
    limit_req_zone $binary_remote_addr zone=req_count:10m rate=1r/s;

    proxy_cache_path /var/cache/nginx/image_cache keys_zone=image_cache:10m max_size=1g inactive=60m use_temp_path=off;

    log_format custom_log '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" '
                      '"$upstream_cache_status" "$limit_req_status"';


    access_log /var/log/nginx/access.log custom_log;

    server {
        listen 8080;
        server_name localhost;

        location ~ ^/purge(/.*\.(jpg|jpeg|png|gif|ico|bmp|webp))$ {
            allow all;
            access_log /var/log/nginx/purge_requests.log;

            content_by_lua_block {
                local file_path = ngx.var.uri:match("/purge(/.*)")
                if file_path then
                    local handle = io.popen("/usr/local/bin/purge_cache.sh " .. file_path)
                    local result = handle:read("*a")
                    handle:close()
                    ngx.say(result)
                else
                    ngx.status = ngx.HTTP_BAD_REQUEST
                    ngx.say("Invalid file path for purge")
                end
            }
        }

        location ~* \.(jpg|jpeg|png|gif|ico|bmp|webp)$ {
            add_header X-Debug-Location "Image Cache Location" always;

            limit_req zone=req_count burst=2;

            proxy_cache image_cache;
            proxy_cache_valid 200 1h;
            proxy_cache_use_stale error timeout updating;
            proxy_cache_lock on;
            proxy_cache_key "$request_uri";


            proxy_pass http://app:8081;

            add_header X-Cache-Status $upstream_cache_status;
            add_header Cache-Control "public, max-age=3600";
            add_header X-Image-Custom-Header "Cached-Image";
        }

        location / {
            add_header X-Debug-Location "Fallback Location" always;
            proxy_pass http://app:8081;
        }
    }
}
