worker_processes 1;

events {
    worker_connections 1024;
}

http {
    # Define a shared memory zone to store request counts
    limit_req_zone $binary_remote_addr zone=req_count:10m rate=1r/s;

    # Define a proxy cache path
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=img_cache:10m max_size=1g inactive=1h use_temp_path=off;

    log_format custom_log '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for" '
                          '"$upstream_cache_status"';

    access_log /var/log/nginx/access.log custom_log;

    server {
        listen 8080;
        server_name localhost;

        location ~* \.(jpg|jpeg|png|gif|ico|bmp|webp)$ {
            # Rate limiting to count requests
            limit_req zone=req_count burst=2 nodelay;

            # Bypass cache for the first request, cache afterward
            set $bypass_cache 1;
            if ($limit_req_status = "HIT") {
                set $bypass_cache 0;
            }

            proxy_cache_bypass $bypass_cache;
            proxy_no_cache $bypass_cache;

            # Proxy cache settings
            proxy_cache img_cache;
            proxy_cache_valid 200 1h;
            proxy_cache_use_stale error timeout updating;
            proxy_cache_lock on;

            # Proxy pass to the backend
            proxy_pass http://app:8081;

            add_header X-Cache-Status $upstream_cache_status;
            add_header Cache-Control "public, max-age=3600";
            add_header X-Image-Custom-Header "Cached-Image";
        }

        location / {
            proxy_pass http://app:8081;
        }
    }
}
